apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: camel-k-basic-pipeline
spec:
  resources:
    - name: source-repo
      type: git
    - name: event-to-sink
      type: cloudEvent
  tasks:
    - name: build-docker-image
      taskRef:
        name: build-docker-image
    - name: run-basic
      taskRef:
        name: camel-k-run-integration
      resources:
        inputs:
          - name: repository
            resource: source-repo
      params:
        - name: pathToFile
          value: "basic/Sample.java"
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: camel-k-run-integration
spec:
  params:
    - name: pathToFile
      type: string
      description: The integration file to run
      default: $(resources.inputs.repository.path)
  resources:
    inputs:
      - name: repository
        type: git
  steps:
    - name: run-integration
      image: apache/camel-k:1.1.0
      workingDir: /workspace/repository
      command:
        - kamel
      args:
        - "run"
        - "--wait"
        - "$(params.pathToFile)"
        - "--property-file"
        - "config/application.properties"
---
# Finally, we need something to receive our cloudevent announcing success!
# That is this services only purpose
apiVersion: v1
kind: Service
metadata:
  name: event-display
  namespace: demo
  labels:
    app: event-display
spec:
  type: ClusterIP
  ports:
    - name: listener
      port: 8080
      protocol: TCP
  selector:
    app: event-display
---
apiVersion: v1
kind: Pod
metadata:
  name: event-display
  namespace: demo
  labels:
    app: event-display
spec:
  hostname: event-display
  containers:
  - image: gcr.io/knative-releases/github.com/knative/eventing-sources/cmd/event_display
    name: web